fn:int canPlaceQueen(r, c, x) -> yes {

    int 1 -> yes;
    int 0 -> i;

    while(i < r) {
        
        get x(i) -> tok;
        int tok -> itok;     
        ? (((itok = c) || ((i - r) = (itok -c))) || ((i - r) = (c - itok))) {
            put 0 -> yes;
            ;;; so that we can break early
            put r -> i; 
        }
        put (i + 1) -> i;
        
    }
}

block printQueens(N, x) {

    int 0 -> i;
    int 0 -> j;

    for tok in x {
        put 0 -> j;
        while(j < N) {
            int tok -> itok;
            ? (itok = j) {
                pr "Q ";
            } : {
                pr "* "; 
            }
            put (j + 1) -> j;
        }
        say "\n";
    }

 }

block placeNQueens(r, n, x) {
    
    int 0 -> c;
    while(c < n) {
        call canPlaceQueen(r, c, x) -> yes;
        ? (yes = 1) {
            string c -> strtok;
            put strtok -> x(r);
            call printQueens(n,x); 
            ? (r = (n - 1)) {
                exit;
            } : {
               ansi_up n;
               call placeNQueens((r + 1), n, x);
            }
        }
        put (c + 1) -> c;
    }
}

start {

    args 0 -> arg;
    int arg -> N;
    list [] -> x;
    int 0 -> i;
    repeat N times {
        string i -> strtok;
        list [^strtok ^^x] -> x;
        put (i + 1) -> i;    
    }
    say "\n\n";
    call placeNQueens(0, N, x);
}
