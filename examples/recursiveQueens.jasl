fn:int canPlaceQueen(r, c, x) -> yes {

    int 1 -> yes;
    
    int 0 -> i;
    while(i < r) {
        
        get_token(i, x) -> tok;
        int tok -> itok;     
        ? (((itok == c) || ((i - r) == (itok -c))) || ((i - r) == (c - itok))) {
            int 0 -> yes;
            // so that we can break early
            int r -> i; 
        }
        int (i + 1) -> i;
    }
    return yes;
}

block printQueens(N, x) {

    int 0 -> i;
    while(i < N) {
        int 0 -> j;
        while(j < N) {
            get_token(i, x) -> tok;
            int tok -> itok;
            ? (itok == j) {
                echo "Q ";
            } : {
                echo "* "; 
            }
            int (j + 1) -> j;
        }
        echo_nl " ";
        int (i + 1) -> i;
    }

}

block placeNQueens(r, n, x) {
    
    int 0 -> c;
    while(c < n) {
        call canPlaceQueen(r, c, x) -> yes;
        ? (yes == 1) {
            string c -> strtok;
            set_token(r, x, strtok) -> x; 
            ? (r == (n - 1)) {
                call printQueens(n, x);
                exit;
            } : {
               call placeNQueens((r + 1), n, x);
            }
        }
        int (c + 1) -> c;
    }
}

start {

    args 0 -> arg;
    int arg -> N;
    list [] -> x;
    int 0 -> i;
    repeat N times {
        string i -> strtok;
        add_token(strtok, x);
        int (i + 1) -> i;    
    }
    call placeNQueens(0, N, x);
}
