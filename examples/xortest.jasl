;;; simple xor cryptor

fn:array:byte encrypt(input, key) -> crypted {
    length input -> inlength;
    length key -> keylength;
    array:byte(inlength) -> crypted;
    int 0 -> k;
    for i in input {
        int (k % keylength) -> keyval;
        get key(keyval) -> kc;
        byte (i ^ kc) -> xored;
        pr xored;
        put xored -> crypted(k);
        put (k + 1) -> k;
    }
    prn " ";
}

start {

    ;;; read clear text and key
    args 0 -> input;
    args 1 -> key;

    ;;; convert to byte arrays
    array:byte key -> keybytes;
    array:byte input -> inbytes;

    ;;; require lengths of clear text and key
    length input -> inlength;
    length keybytes -> keylength;

    ;;; create array to store cipher bytes
    call encrypt(inbytes, keybytes) -> outbytes;

    ;;; decrypt
    call encrypt(outbytes, keybytes) -> result;
}